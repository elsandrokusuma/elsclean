// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview An AI-powered audio equipment recommendation tool.
 *
 * - audioAdvisor - A function that handles the audio equipment recommendation process.
 * - AudioAdvisorInput - The input type for the audioAdvisor function.
 * - AudioAdvisorOutput - The return type for the audioAdvisor function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AudioAdvisorInputSchema = z.object({
  usageScenario: z
    .string()
    .describe('Describe your intended usage scenario for the audio equipment.'),
  budget: z
    .string()
    .describe('What is your budget for the audio equipment?'),
  soundPreferences: z
    .string()
    .describe(
      'Describe your sound preferences (e.g., balanced, bass-heavy, neutral).' + 
      'If you don\'t have a preference, say so.'
    ),
});
export type AudioAdvisorInput = z.infer<typeof AudioAdvisorInputSchema>;

const AudioAdvisorOutputSchema = z.object({
  recommendation: z
    .string()
    .describe('The recommended audio equipment based on the user input.'),
  reasoning: z
    .string()
    .describe('The reasoning behind the recommendation.'),
});
export type AudioAdvisorOutput = z.infer<typeof AudioAdvisorOutputSchema>;

export async function audioAdvisor(input: AudioAdvisorInput): Promise<AudioAdvisorOutput> {
  return audioAdvisorFlow(input);
}

const prompt = ai.definePrompt({
  name: 'audioAdvisorPrompt',
  input: {schema: AudioAdvisorInputSchema},
  output: {schema: AudioAdvisorOutputSchema},
  prompt: `You are an expert audio equipment advisor. Based on the user's needs and preferences, you will recommend the best audio equipment for their specific use case.

  Usage Scenario: {{{usageScenario}}}
  Budget: {{{budget}}}
  Sound Preferences: {{{soundPreferences}}}

  Recommendation:
  Reasoning: `,
});

const audioAdvisorFlow = ai.defineFlow(
  {
    name: 'audioAdvisorFlow',
    inputSchema: AudioAdvisorInputSchema,
    outputSchema: AudioAdvisorOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
